"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[14970],{26246:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"3_manage_nifi/1_manage_clusters/1_deploy_cluster/5_users_authentication/1_oidc","title":"OpenId Connect","description":"To enable authentication via OpenId Connect refering to NiFi Administration guide required some configuration into nifi.properties.","source":"@site/versioned_docs/version-v1.14.0/3_manage_nifi/1_manage_clusters/1_deploy_cluster/5_users_authentication/1_oidc.md","sourceDirName":"3_manage_nifi/1_manage_clusters/1_deploy_cluster/5_users_authentication","slug":"/3_manage_nifi/1_manage_clusters/1_deploy_cluster/5_users_authentication/1_oidc","permalink":"/nifikop/docs/3_manage_nifi/1_manage_clusters/1_deploy_cluster/5_users_authentication/1_oidc","draft":false,"unlisted":false,"editUrl":"https://github.com/konpyutaika/nifikop/edit/master/site/website/versioned_docs/version-v1.14.0/3_manage_nifi/1_manage_clusters/1_deploy_cluster/5_users_authentication/1_oidc.md","tags":[],"version":"v1.14.0","lastUpdatedBy":"Julien Guitton","lastUpdatedAt":1748165544000,"frontMatter":{"id":"1_oidc","title":"OpenId Connect","sidebar_label":"OpenId Connect"},"sidebar":"docs","previous":{"title":"SSL configuration","permalink":"/nifikop/docs/3_manage_nifi/1_manage_clusters/1_deploy_cluster/4_ssl_configuration"},"next":{"title":"Custom User Authorizers","permalink":"/nifikop/docs/3_manage_nifi/1_manage_clusters/1_deploy_cluster/6_users_authorization/1_custom_user_authorizer"}}');var o=n(62540),r=n(43023);const s={id:"1_oidc",title:"OpenId Connect",sidebar_label:"OpenId Connect"},a=void 0,c={},d=[];function u(e){const i={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(i.p,{children:["To enable authentication via OpenId Connect refering to ",(0,o.jsx)(i.a,{href:"https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html",children:"NiFi Administration guide"})," required some configuration into ",(0,o.jsx)(i.code,{children:"nifi.properties"}),"."]}),"\n",(0,o.jsxs)(i.p,{children:["In addition and to ensure multiple identity provider support, we recommended to add the following configuration to your ",(0,o.jsx)(i.code,{children:"nifi.properties"}),":"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-sh",children:"nifi.security.identity.mapping.pattern.dn=CN=([^,]*)(?:, (?:O|OU)=.*)?\nnifi.security.identity.mapping.value.dn=$1\nnifi.security.identity.mapping.transform.dn=NONE\n"})}),"\n",(0,o.jsxs)(i.p,{children:["To perform this with ",(0,o.jsx)(i.code,{children:"NiFiKop"})," you just have to configure the ",(0,o.jsx)(i.code,{children:"Spec.NifiProperties.OverrideConfigs"})," field with your OIDC configuration, for example:"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-yaml",children:"apiVersion: nifi.konpyutaika.com/v1\nkind: NifiCluster\n...\nspec:\n  ...\n  readOnlyConfig:\n    # NifiProperties configuration that will be applied to the node.\n    nifiProperties:\n      webProxyHosts:\n        - nifistandard2.trycatchlearn.fr:8443\n      # Additionnal nifi.properties configuration that will override the one produced based\n      # on template and configurations.\n      overrideConfigs: |\n        nifi.security.user.oidc.discovery.url=<oidc server discovery url>\n        nifi.security.user.oidc.client.id=<oidc client's id>\n        nifi.security.user.oidc.client.secret=<oidc client's secret>\n        nifi.security.identity.mapping.pattern.dn=CN=([^,]*)(?:, (?:O|OU)=.*)?\n        nifi.security.identity.mapping.value.dn=$1\n        nifi.security.identity.mapping.transform.dn=NONE\n      ...\n   ...\n...\n"})})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},43023:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var t=n(63696);const o={},r=t.createContext(o);function s(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);